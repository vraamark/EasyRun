<UserControl x:Class="EasyRun.Views.EasyRunToolWindowView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"             
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converters="clr-namespace:EasyRun.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:ap="clr-namespace:EasyRun.AttachProperties"
             xmlns:controls="clr-namespace:EasyRun.Views"
             mc:Ignorable="d"
             xmlns:dm="clr-namespace:EasyRun.Models"
             xmlns:dialogs="clr-namespace:EasyRun.Dialogs"
             d:DesignHeight="800" d:DesignWidth="600"
             Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
             Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
             Name="EasyRunToolWindow">

    <!-- Note: In Visual Studio 2019 The new WPF Designer need to be enabled to view design time values (e.g. d:Text=""). -->
    <!-- Go to Menu, Tools, Options, Environment, Preview Features, "New WPF XAML Designer". Then restart Visual Studio. -->
    <UserControl.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="b2v" />
            <converters:VisibilityConverter x:Key="VisibilityConverter"/>
            <converters:TextConverter x:Key="TextConverter"/>
            <converters:MonikersConverter x:Key="MonikersConverter"/>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/EasyRunStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <dialogs:DialogHost>
        <!-- Main tool window -->
        <Grid x:Name="EasyRunControlScope" UseLayoutRounding="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid Grid.IsSharedSizeScope="True" IsEnabled="{Binding State.NotRunning}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Profile selection and toolbar -->
                    <Grid Grid.Row="0" Margin="0,8,8,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="A"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Content="Profile" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                        <Grid Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <!--Profile selection-->
                            <ComboBox
                                Grid.Column="0"
                                ItemsSource="{Binding Model.Profiles}"
                                SelectedItem="{Binding Model.SelectedProfile}"
                                SelectionChanged="ProfileChanged"
                                DisplayMemberPath="Name"
                                Style="{DynamicResource {x:Static vsshell:VsResourceKeys.ComboBoxStyleKey}}"
                                IsEditable="False"/>

                            <!-- Toolbar -->
                            <StackPanel Grid.Column="1" Margin="8,0,0,0" Orientation="Horizontal">
                                <Button MinWidth="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Margin="4,0,0,0" Command="{Binding SaveProfileCommand}" Template="{DynamicResource ToolButtonTemplate}">
                                    <Button.ToolTip>
                                        <StackPanel>
                                            <TextBlock>Save selected profile</TextBlock>
                                        </StackPanel>
                                    </Button.ToolTip>
                                    <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Save}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Button>
                                <Button MinWidth="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Margin="4,0,0,0" Command="{Binding EditProfileCommand}" Template="{DynamicResource ToolButtonTemplate}">
                                    <Button.ToolTip>
                                        <StackPanel>
                                            <TextBlock>Edit selected profile</TextBlock>
                                        </StackPanel>
                                    </Button.ToolTip>
                                    <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Edit}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Button>
                                <Button MinWidth="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Margin="4,0,0,0" Command="{Binding CopyProfileCommand}" Template="{DynamicResource ToolButtonTemplate}">
                                    <Button.ToolTip>
                                        <StackPanel>
                                            <TextBlock>Copy selected profile</TextBlock>
                                        </StackPanel>
                                    </Button.ToolTip>
                                    <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Copy}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Button>
                                <Button MinWidth="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Margin="4,0,0,0" Command="{Binding AddProfileCommand}" Template="{DynamicResource ToolButtonTemplate}">
                                    <Button.ToolTip>
                                        <StackPanel>
                                            <TextBlock>Add new profile</TextBlock>
                                        </StackPanel>
                                    </Button.ToolTip>
                                    <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Add}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Button>
                                <Button MinWidth="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Margin="4,0,0,0" Command="{Binding DeleteProfileCommand}" Template="{DynamicResource ToolButtonTemplate}">
                                    <Button.ToolTip>
                                        <StackPanel>
                                            <TextBlock>Delete selected profile</TextBlock>
                                        </StackPanel>
                                    </Button.ToolTip>
                                    <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Cancel}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Grid>

                    <!-- Filter -->
                    <Grid Grid.Row="1" Margin="0,8,8,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="A"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Content="Filter" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                        <TextBox x:Name="Filter" d:Text="1|2|3" Text="{Binding Model.SelectedProfile.Filter, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" VerticalContentAlignment="Center" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBoxStyleKey}}"/>
                    </Grid>
                </Grid>
            </Grid>

            <!-- Common actions for a profile -->
            <Grid Grid.Row="1" Margin="8,8,8,0" HorizontalAlignment="Stretch" Visibility="{Binding Model.SelectedProfile.UseTye, Converter={StaticResource VisibilityConverter}, ConverterParameter='Visible;Collapsed'}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Run/Stop action -->
                    <Grid Grid.Column="0">
                        <Button
                            Visibility="{Binding State.Running, Converter={StaticResource VisibilityConverter}, ConverterParameter='Hidden;Visible'}"
                            Width="80"
                            MinHeight="22"
                            VerticalAlignment="Center"
                            Style="{DynamicResource {x:Static vsshell:VsResourceKeys.ButtonStyleKey}}"
                            Command="{Binding RunCommand}">
                            <StackPanel Orientation="Horizontal">
                                <imaging:CrispImage Margin="0,0,4,0" Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Run}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <TextBlock Text="Tye"/>
                            </StackPanel>
                        </Button>
                        <Button
                            Visibility="{Binding State.Running, Converter={StaticResource VisibilityConverter}, ConverterParameter='Visible;Hidden'}" d:Visibility="Hidden"
                            Width="80"
                            MinHeight="22"
                            VerticalAlignment="Center"
                            Style="{DynamicResource {x:Static vsshell:VsResourceKeys.ButtonStyleKey}}"
                            Command="{Binding StopCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Border x:Name="StopIcon" Margin="0,0,4,0" Background="Transparent" BorderThickness="0">
                                    <Border.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding State.Stopping}" Value="True">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1.0" To="0.0" Duration="0:0:1" AutoReverse="True" RepeatBehavior="Forever" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                    <DataTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1.0" Duration="0:0:0"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.ExitActions>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Stop}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <TextBlock Text="Tye"/>
                            </StackPanel>
                        </Button>
                    </Grid>

                    <!-- Attach to debugger if Tye -->
                    <CheckBox
                        Grid.Column="1"
                        IsEnabled="{Binding State.NotRunning}"
                        HorizontalAlignment="Left"
                        Margin="10,0,0,0"
                        IsChecked="{Binding Model.SelectedProfile.AttachDebugger}"
                        Content="Attach debugger"
                        Style="{DynamicResource {x:Static vsshell:VsResourceKeys.CheckBoxStyleKey}}"
                        VerticalAlignment="Center"/>

                    <Button
                        Margin="8,0,0,0"
                        Grid.Column="2"
                        Width="100"
                        MinHeight="22"
                        VerticalAlignment="Center"
                        Style="{DynamicResource {x:Static vsshell:VsResourceKeys.ButtonStyleKey}}"
                        Command="{Binding ShowDashboardCommand}"
                        HorizontalAlignment="Left">
                        <StackPanel Orientation="Horizontal">
                            <imaging:CrispImage Margin="0,0,4,0" Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.ASPWebSite}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock Text="Dashboard"/>
                        </StackPanel>
                    </Button>

                    <!-- Toggle button for profile settings -->
                    <ToggleButton Grid.Column="3" x:Name="tyeSettingsExpander" Template="{DynamicResource ExpanderButtonTemplate}" d:IsChecked="True" />
                </Grid>

                <!-- Profile settings -->
                <Grid
                    Margin="0,0,0,16"
                    IsEnabled="{Binding State.NotRunning}"
                    Grid.IsSharedSizeScope="True" Grid.Row="1"
                    Visibility="{Binding IsChecked, ElementName=tyeSettingsExpander,Converter={StaticResource b2v}}">

                    <!-- Profile settings for Tye -->
                    <Grid Margin="0,8,0,0" Visibility="{Binding Model.SelectedProfile.UseTye, Converter={StaticResource VisibilityConverter}, ConverterParameter='Visible;Collapsed'}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="13*"/>
                            <ColumnDefinition Width="60*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0" Margin="0,8,8,0" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="C"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox
                                Grid.Column="1"
                                IsEnabled="{Binding State.NotRunning}"
                                HorizontalAlignment="Left"
                                IsChecked="{Binding Model.SelectedProfile.WaitOnAttachDebugger}"
                                Content="Wait on attach."
                                Style="{DynamicResource {x:Static vsshell:VsResourceKeys.CheckBoxStyleKey}}"
                                VerticalAlignment="Center"/>
                        </Grid>

                        <Grid Grid.Row="1" Margin="0,8,8,0" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="C"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox
                                Grid.Column="1"
                                IsEnabled="{Binding State.NotRunning}"
                                HorizontalAlignment="Left"
                                IsChecked="{Binding Model.SelectedProfile.Watch}"
                                Content="Watch (ignored when attaching debugger)."
                                Style="{DynamicResource {x:Static vsshell:VsResourceKeys.CheckBoxStyleKey}}"
                                VerticalAlignment="Center"/>
                        </Grid>

                        <!-- Tye Daskboard port -->
                        <Grid Grid.Row="2" Margin="0,8,8,0" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="C"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="Tye Dashboard Port" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                            <TextBox Grid.Column="1" PreviewTextInput="TextBox_OnlyNumbers" Text="{Binding Model.SelectedProfile.TyePort, UpdateSourceTrigger=PropertyChanged}" Width="50" VerticalContentAlignment="Center" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBoxStyleKey}}" HorizontalAlignment="Left"/>
                        </Grid>

                        <!-- Logging selection -->
                        <Grid Grid.Row="3" Margin="0,8,8,0" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="C"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="Logging" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                            <ComboBox
                                Grid.Column="1"
                                ItemsSource="{Binding State.LoggingTargets}"
                                DisplayMemberPath="Text"
                                SelectedValue="{Binding Model.SelectedProfile.LoggingTargetType}"
                                SelectedValuePath="TargetType"
                                Style="{DynamicResource {x:Static vsshell:VsResourceKeys.ComboBoxStyleKey}}"
                                IsEditable="False"/>
                        </Grid>

                        <!-- Logging Path -->
                        <Grid Grid.Row="4" Margin="0,8,8,0" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="C"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="Logging path" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                            <TextBox Grid.Column="1" Text="{Binding Model.SelectedProfile.LoggingPath, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBoxStyleKey}}"/>
                        </Grid>

                        <!-- Logging URL -->
                        <Grid Grid.Row="5" Margin="0,8,8,0" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="C"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="Logger URL" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                            <TextBox Grid.Column="1" Text="{Binding Model.SelectedProfile.LoggerUrl, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBoxStyleKey}}"/>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>

            <Grid Margin="8,16,8,8" Grid.Row="2">
                <StackPanel Orientation="Horizontal">
                    <CheckBox
                    IsEnabled="{Binding State.NotRunning}"
                    Content="Select all"
                    IsChecked="{Binding Model.AllSelected}"
                    Style="{DynamicResource {x:Static vsshell:VsResourceKeys.CheckBoxStyleKey}}"
                    Command="{Binding SelectAllCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    VerticalAlignment="Center">
                    </CheckBox>
                    <!--<Button
                        Content="Save selection as default"
                        Margin="8,0,0,0"
                        Grid.Column="2"
                        Width="150"
                        MinHeight="22"
                        VerticalAlignment="Center"
                        Style="{DynamicResource {x:Static vsshell:VsResourceKeys.ButtonStyleKey}}"
                        Command="{Binding ShowDashboardCommand}"
                        HorizontalAlignment="Left"/>-->

                    <TextBlock Visibility="{Binding State.AutosaveSelectionsAsDefault, Converter={StaticResource VisibilityConverter}, ConverterParameter='Collapsed;Visible'}" Margin="16,0,0,0" VerticalAlignment="Center">
                        <Hyperlink  Command="{Binding SaveSelectionsAsDefaultCommand}">Save current selections as default</Hyperlink>
                    </TextBlock>
                </StackPanel>

                <!-- Image (Docker) and Exe files.
                <StackPanel Visibility="{Binding Model.SelectedProfile.UseTye, Converter={StaticResource VisibilityConverter}, ConverterParameter='Visible;Collapsed'}" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button
                        IsEnabled="{Binding State.NotRunning, RelativeSource={RelativeSource AncestorType=UserControl}}"
                        Height="22"
                        Width="22"
                        Template="{DynamicResource ToolButtonTemplate}"
                        Command="{Binding AddDockerCommand}">
                        <Button.ToolTip>
                            <StackPanel>
                                <TextBlock>Add new docker service.</TextBlock>
                            </StackPanel>
                        </Button.ToolTip>
                        <Grid Width="18" Height="18" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <imaging:CrispImage Margin="2,2,0,0" Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Docker}" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            <imaging:CrispImage Width="10" Height="10" Moniker="{x:Static catalog:KnownMonikers.Add}" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        </Grid>
                    </Button>

                    <Button Margin="4,0,0,0" IsEnabled="{Binding State.NotRunning, RelativeSource={RelativeSource AncestorType=UserControl}}" Height="22" Width="22" Template="{DynamicResource ToolButtonTemplate}">
                        <Button.ToolTip>
                            <StackPanel>
                                <TextBlock>Add new executable.</TextBlock>
                            </StackPanel>
                        </Button.ToolTip>
                        <Grid Width="18" Height="18" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <imaging:CrispImage Margin="2,2,0,0" Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.BinaryFile}" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            <imaging:CrispImage Width="10" Height="10" Moniker="{x:Static catalog:KnownMonikers.Add}" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        </Grid>
                    </Button>
                </StackPanel>
                -->
            </Grid>

            <!-- Service for the selected profile -->
            <ScrollViewer Grid.Row="3" Margin="0,0,0,0"  VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <ItemsControl ItemsSource="{Binding Model.SelectedProfile.FilteredServices}" Margin="8">
                    <d:ItemsControl.ItemsSource>
                        <x:Array Type="{x:Type dm:ServiceModel}">
                            <dm:ServiceModel Name="Project 1" Selected="True"/>
                            <dm:ServiceModel Name="Project 3" Selected="True"/>
                        </x:Array>
                    </d:ItemsControl.ItemsSource>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <!-- Service -->
                                <Grid Grid.Row="0" Margin="0,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <imaging:CrispImage Grid.Column="0" Margin="0,0,6,0" Width="16" Height="16" Moniker="{Binding ServiceType, Converter={StaticResource MonikersConverter}}" />
                                    <Button
                                        ap:DebuggerAttachedProperties.DebuggerAttached="False"
                                        Grid.Column="1"
                                        MinWidth="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                        Margin="0,0,6,0"
                                        Command="{Binding SaveProfileCommand}"
                                        Template="{DynamicResource DebugButtonTemplate}">
                                        <Button.ToolTip>
                                            <StackPanel>
                                                <TextBlock>Attach/detach debugger</TextBlock>
                                            </StackPanel>
                                        </Button.ToolTip>
                                    </Button>

                                    <CheckBox
                                        Grid.Column="2"
                                        IsEnabled="{Binding State.NotRunning, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                        Content="{Binding Name}"
                                        IsChecked="{Binding Selected}"
                                        Style="{DynamicResource {x:Static vsshell:VsResourceKeys.CheckBoxStyleKey}}"
                                        Command="{Binding ServiceSelectionCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                        VerticalAlignment="Center">
                                    </CheckBox>

                                    <ToggleButton Grid.Column="3" x:Name="expander" Template="{DynamicResource ExpanderButtonTemplate}" d:IsChecked="True"/>
                                </Grid>

                                <!-- Configuration -->
                                <Grid
                                    Grid.Row="1"
                                    Grid.IsSharedSizeScope="True"
                                    Margin="0,0,0,16"
                                    Visibility="{Binding IsChecked,ElementName=expander,Converter={StaticResource b2v}}"
                                    IsEnabled="{Binding State.NotRunning, RelativeSource={RelativeSource AncestorType=UserControl}}">
                                    <Grid Visibility="{Binding Model.SelectedProfile.UseTye, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource VisibilityConverter}, ConverterParameter='Visible;Collapsed'}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Border BorderThickness="0,1,0,0" BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}" d:BorderBrush="Black"/>

                                        <!-- Tye Name -->
                                        <Grid Grid.Row="0" Margin="0,8,8,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition SharedSizeGroup="B"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" Content="Name" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                                            <TextBox Text="{Binding TyeName, UpdateSourceTrigger=PropertyChanged}"  Grid.Column="1" VerticalContentAlignment="Center" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBoxStyleKey}}" VerticalScrollBarVisibility="Disabled" AcceptsReturn="True"/>
                                        </Grid>

                                        <!-- Bindings -->
                                        <Grid Grid.Row="1" Margin="0,8,8,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition SharedSizeGroup="B"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" Content="Bindings" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                                            <TextBox Text="{Binding Bindings, UpdateSourceTrigger=PropertyChanged}"  Grid.Column="1" VerticalContentAlignment="Center" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBoxStyleKey}}" VerticalScrollBarVisibility="Disabled" AcceptsReturn="True"/>
                                        </Grid>

                                        <!-- Arguments -->
                                        <Grid Grid.Row="2" Margin="0,8,8,0" Visibility="{Binding Model.SelectedProfile.UseTye, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource VisibilityConverter}, ConverterParameter='Visible;Collapsed'}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition SharedSizeGroup="B"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" Content="Arguments" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                                            <TextBox Text="{Binding Arguments, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" VerticalContentAlignment="Center" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBoxStyleKey}}"/>
                                        </Grid>

                                        <!-- Environment variables -->
                                        <Grid Grid.Row="3" Margin="0,8,8,0" Visibility="{Binding Model.SelectedProfile.UseTye, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource VisibilityConverter}, ConverterParameter='Visible;Collapsed'}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition SharedSizeGroup="B"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" Content="Env. variables" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                                            <TextBox Text="{Binding EnvVariables, UpdateSourceTrigger=PropertyChanged}"  Grid.Column="1" VerticalContentAlignment="Center" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBoxStyleKey}}" VerticalScrollBarVisibility="Disabled" AcceptsReturn="True"/>
                                        </Grid>

                                        <!-- Secret Environment variables -->
                                        <Grid Grid.Row="4" Margin="0,8,8,0" Visibility="{Binding Model.SelectedProfile.UseTye, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource VisibilityConverter}, ConverterParameter='Visible;Collapsed'}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition SharedSizeGroup="B"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" Content="Secret variables" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                                            <Grid Grid.Column="1">
                                                <TextBox
                                                    Visibility="{Binding IsChecked,ElementName=showHideSecret, Converter={StaticResource VisibilityConverter}, ConverterParameter='Visible;Collapsed'}"
                                                    Text="{Binding SecretEnvVariables, UpdateSourceTrigger=PropertyChanged}"
                                                    VerticalContentAlignment="Center"
                                                    Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBoxStyleKey}}"
                                                    VerticalScrollBarVisibility="Disabled"
                                                    AcceptsReturn="True"/>
                                                <TextBox
                                                    Visibility="{Binding IsChecked,ElementName=showHideSecret, Converter={StaticResource VisibilityConverter}, ConverterParameter='Collapsed;Visible'}"
                                                    Text="************************"
                                                    IsReadOnly="True"
                                                    VerticalContentAlignment="Center"
                                                    Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBoxStyleKey}}"/>
                                            </Grid>
                                            <ToggleButton x:Name="showHideSecret" Grid.Column="2" Margin="4,0,0,0" Template="{DynamicResource ShowHideSecretButtonTemplate}" SnapsToDevicePixels="True"/>
                                        </Grid>

                                        <!-- Replicas -->
                                        <Grid Grid.Row="5" Margin="0,8,8,0" Visibility="{Binding Model.SelectedProfile.UseTye, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource VisibilityConverter}, ConverterParameter='Visible;Collapsed'}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition SharedSizeGroup="B"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" Content="Replicas" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                                            <TextBox Grid.Column="1" PreviewTextInput="TextBox_OnlyNumbers" Text="{Binding Replicas, UpdateSourceTrigger=PropertyChanged}" Width="30" VerticalContentAlignment="Center" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBoxStyleKey}}" HorizontalAlignment="Left"/>
                                        </Grid>
                                    </Grid>

                                    <!-- Visual Studio settings -->
                                    <Grid
                                        Grid.Row="0"
                                        Margin="0,8,8,0"
                                        Visibility="{Binding Model.SelectedProfile.UseTye, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource VisibilityConverter}, ConverterParameter='Collapsed;Visible'}"
                                        d:Visibility="Collapsed">
                                        <TextBlock FontStyle="Italic" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                No VS settings - coming soon.
                                        </TextBlock>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>

            <Grid Grid.Row="4"
                  Background="LightYellow"
                  Visibility="{Binding State.ShowInfo, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource VisibilityConverter}, ConverterParameter='Visible;Collapsed'}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Foreground="Black" Padding="6" Text="{Binding State.ShowInfoText}"/>
                <Button Margin="6,6,6,6" Width="16" Height="16" Grid.Column="1" Template="{DynamicResource InfoButtonTemplate}" Command="{Binding HideInfoCommand}"/>
            </Grid>
        </Grid>
    </dialogs:DialogHost>
</UserControl>
